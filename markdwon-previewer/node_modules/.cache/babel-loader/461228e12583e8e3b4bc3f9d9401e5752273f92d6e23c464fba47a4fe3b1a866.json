{"ast":null,"code":"/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport { findAndReplace } from 'mdast-util-find-and-replace';\n\n/**\n * Turn normal line endings into hard breaks.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @returns {undefined}\n *   Nothing.\n */\nexport function newlineToBreak(tree) {\n  findAndReplace(tree, [/\\r?\\n|\\r/g, replace]);\n}\n\n/**\n * Replace line endings.\n *\n * @type {ReplaceFunction}\n */\nfunction replace() {\n  return {\n    type: 'break'\n  };\n}","map":{"version":3,"names":["findAndReplace","newlineToBreak","tree","replace","type"],"sources":["C:/Users/Humi Yar/Desktop/react2/project-markdown-previewer/markdwon-previewer/node_modules/mdast-util-newline-to-break/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/**\n * Turn normal line endings into hard breaks.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @returns {undefined}\n *   Nothing.\n */\nexport function newlineToBreak(tree) {\n  findAndReplace(tree, [/\\r?\\n|\\r/g, replace])\n}\n\n/**\n * Replace line endings.\n *\n * @type {ReplaceFunction}\n */\nfunction replace() {\n  return {type: 'break'}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAAQA,cAAc,QAAO,6BAA6B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAE;EACnCF,cAAc,CAACE,IAAI,EAAE,CAAC,WAAW,EAAEC,OAAO,CAAC,CAAC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAOA,CAAA,EAAG;EACjB,OAAO;IAACC,IAAI,EAAE;EAAO,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}